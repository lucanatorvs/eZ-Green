#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_TLC59711.h>

// UART definitions for custom pins
#define UART_ID uart0
#define TX_PIN 16 //B
#define RX_PIN 17 //A
UART Serial2 = UART(TX_PIN, RX_PIN);

#define STBY 10

// 10mA peak current
// const int duty_cycle_16bit[360][2] = {{-61393, 12302},{52284, 12304},{48037, 12312},{45788, 12325},{43638, 12343},{40986, 12366},{35189, 12395},{31765, 12428},{30235, 12467},{29166, 12510},{28318, 12559},{27601, 12613},{26972, 12671},{26408, 12735},{25893, 12803},{25416, 12876},{24971, 12954},{24552, 13037},{24155, 13125},{23778, 13217},{23417, 13313},{23071, 13414},{22737, 13520},{22416, 13629},{22105, 13744},{21803, 13862},{21510, 13985},{21226, 14111},{20948, 14242},{20678, 14377},{20414, 14516},{20156, 14658},{19903, 14804},{19656, 14955},{19414, 15109},{19177, 15266},{18945, 15427},{18717, 15592},{18493, 15760},{18274, 15932},{18058, 16108},{17847, 16287},{17639, 16469},{17435, 16655},{17235, 16845},{17038, 17038},{16845, 17235},{16655, 17435},{16469, 17639},{16287, 17847},{16108, 18058},{15932, 18274},{15760, 18493},{15592, 18717},{15427, 18945},{15266, 19177},{15109, 19414},{14955, 19656},{14804, 19903},{14658, 20156},{14516, 20414},{14377, 20678},{14242, 20948},{14111, 21226},{13985, 21510},{13862, 21803},{13744, 22105},{13629, 22416},{13520, 22737},{13414, 23071},{13313, 23417},{13217, 23778},{13125, 24155},{13037, 24552},{12954, 24971},{12876, 25416},{12803, 25893},{12735, 26408},{12671, 26972},{12613, 27601},{12559, 28318},{12510, 29166},{12467, 30235},{12428, 31765},{12395, 35189},{12366, 40986},{12343, 43638},{12325, 45788},{12312, 48037},{12304, 52284},{12302, 61393},{12304, -52284},{12312, -48037},{12325, -45788},{12343, -43638},{12366, -40986},{12395, -35189},{12428, -31765},{12467, -30235},{12510, -29166},{12559, -28318},{12613, -27601},{12671, -26972},{12735, -26408},{12803, -25893},{12876, -25416},{12954, -24971},{13037, -24552},{13125, -24155},{13217, -23778},{13313, -23417},{13414, -23071},{13520, -22737},{13629, -22416},{13744, -22105},{13862, -21803},{13985, -21510},{14111, -21226},{14242, -20948},{14377, -20678},{14516, -20414},{14658, -20156},{14804, -19903},{14955, -19656},{15109, -19414},{15266, -19177},{15427, -18945},{15592, -18717},{15760, -18493},{15932, -18274},{16108, -18058},{16287, -17847},{16469, -17639},{16655, -17435},{16845, -17235},{17038, -17038},{17235, -16845},{17435, -16655},{17639, -16469},{17847, -16287},{18058, -16108},{18274, -15932},{18493, -15760},{18717, -15592},{18945, -15427},{19177, -15266},{19414, -15109},{19656, -14955},{19903, -14804},{20156, -14658},{20414, -14516},{20678, -14377},{20948, -14242},{21226, -14111},{21510, -13985},{21803, -13862},{22105, -13744},{22416, -13629},{22737, -13520},{23071, -13414},{23417, -13313},{23778, -13217},{24155, -13125},{24552, -13037},{24971, -12954},{25416, -12876},{25893, -12803},{26408, -12735},{26972, -12671},{27601, -12613},{28318, -12559},{29166, -12510},{30235, -12467},{31765, -12428},{35189, -12395},{40986, -12366},{43638, -12343},{45788, -12325},{48037, -12312},{52284, -12304},{61393, -12302},{-52284, -12304},{-48037, -12312},{-45788, -12325},{-43638, -12343},{-40986, -12366},{-35189, -12395},{-31765, -12428},{-30235, -12467},{-29166, -12510},{-28318, -12559},{-27601, -12613},{-26972, -12671},{-26408, -12735},{-25893, -12803},{-25416, -12876},{-24971, -12954},{-24552, -13037},{-24155, -13125},{-23778, -13217},{-23417, -13313},{-23071, -13414},{-22737, -13520},{-22416, -13629},{-22105, -13744},{-21803, -13862},{-21510, -13985},{-21226, -14111},{-20948, -14242},{-20678, -14377},{-20414, -14516},{-20156, -14658},{-19903, -14804},{-19656, -14955},{-19414, -15109},{-19177, -15266},{-18945, -15427},{-18717, -15592},{-18493, -15760},{-18274, -15932},{-18058, -16108},{-17847, -16287},{-17639, -16469},{-17435, -16655},{-17235, -16845},{-17038, -17038},{-16845, -17235},{-16655, -17435},{-16469, -17639},{-16287, -17847},{-16108, -18058},{-15932, -18274},{-15760, -18493},{-15592, -18717},{-15427, -18945},{-15266, -19177},{-15109, -19414},{-14955, -19656},{-14804, -19903},{-14658, -20156},{-14516, -20414},{-14377, -20678},{-14242, -20948},{-14111, -21226},{-13985, -21510},{-13862, -21803},{-13744, -22105},{-13629, -22416},{-13520, -22737},{-13414, -23071},{-13313, -23417},{-13217, -23778},{-13125, -24155},{-13037, -24552},{-12954, -24971},{-12876, -25416},{-12803, -25893},{-12735, -26408},{-12671, -26972},{-12613, -27601},{-12559, -28318},{-12510, -29166},{-12467, -30235},{-12428, -31765},{-12395, -35189},{-12366, -40986},{-12343, -43638},{-12325, -45788},{-12312, -48037},{-12304, -52284},{-12302, -61393},{-12304, 52284},{-12312, 48037},{-12325, 45788},{-12343, 43638},{-12366, 40986},{-12395, 35189},{-12428, 31765},{-12467, 30235},{-12510, 29166},{-12559, 28318},{-12613, 27601},{-12671, 26972},{-12735, 26408},{-12803, 25893},{-12876, 25416},{-12954, 24971},{-13037, 24552},{-13125, 24155},{-13217, 23778},{-13313, 23417},{-13414, 23071},{-13520, 22737},{-13629, 22416},{-13744, 22105},{-13862, 21803},{-13985, 21510},{-14111, 21226},{-14242, 20948},{-14377, 20678},{-14516, 20414},{-14658, 20156},{-14804, 19903},{-14955, 19656},{-15109, 19414},{-15266, 19177},{-15427, 18945},{-15592, 18717},{-15760, 18493},{-15932, 18274},{-16108, 18058},{-16287, 17847},{-16469, 17639},{-16655, 17435},{-16845, 17235},{-17038, 17038},{-17235, 16845},{-17435, 16655},{-17639, 16469},{-17847, 16287},{-18058, 16108},{-18274, 15932},{-18493, 15760},{-18717, 15592},{-18945, 15427},{-19177, 15266},{-19414, 15109},{-19656, 14955},{-19903, 14804},{-20156, 14658},{-20414, 14516},{-20678, 14377},{-20948, 14242},{-21226, 14111},{-21510, 13985},{-21803, 13862},{-22105, 13744},{-22416, 13629},{-22737, 13520},{-23071, 13414},{-23417, 13313},{-23778, 13217},{-24155, 13125},{-24552, 13037},{-24971, 12954},{-25416, 12876},{-25893, 12803},{-26408, 12735},{-26972, 12671},{-27601, 12613},{-28318, 12559},{-29166, 12510},{-30235, 12467},{-31765, 12428},{-35189, 12395},{-40986, 12366},{-43638, 12343},{-45788, 12325},{-48037, 12312},{-52284, 12304},};

// 15mA n
const int duty_cycle_16bit[360][2] = {{-61393, 3763},{49464, 3767},{45786, 3777},{42427, 3794},{35147, 3818},{30894, 3849},{29147, 3886},{27923, 3931},{26943, 3982},{26108, 4041},{25371, 4106},{24704, 4178},{24089, 4258},{23516, 4345},{22977, 4439},{22465, 4541},{21976, 4650},{21507, 4766},{21054, 4890},{20616, 5022},{20190, 5162},{19775, 5310},{19369, 5465},{18972, 5630},{18583, 5802},{18200, 5983},{17823, 6172},{17451, 6370},{17084, 6576},{16721, 6791},{16361, 7015},{16005, 7247},{15652, 7488},{15301, 7737},{14953, 7994},{14607, 8259},{14263, 8532},{13921, 8811},{13580, 9098},{13242, 9391},{12906, 9690},{12571, 9994},{12239, 10304},{11909, 10617},{11581, 10935},{11257, 11257},{10935, 11581},{10617, 11909},{10304, 12239},{9994, 12571},{9690, 12906},{9391, 13242},{9098, 13580},{8811, 13921},{8532, 14263},{8259, 14607},{7994, 14953},{7737, 15301},{7488, 15652},{7247, 16005},{7015, 16361},{6791, 16721},{6576, 17084},{6370, 17451},{6172, 17823},{5983, 18200},{5802, 18583},{5630, 18972},{5465, 19369},{5310, 19775},{5162, 20190},{5022, 20616},{4890, 21054},{4766, 21507},{4650, 21976},{4541, 22465},{4439, 22977},{4345, 23516},{4258, 24089},{4178, 24704},{4106, 25371},{4041, 26108},{3982, 26943},{3931, 27923},{3886, 29147},{3849, 30894},{3818, 35147},{3794, 42427},{3777, 45786},{3767, 49464},{3763, 61393},{3767, -49464},{3777, -45786},{3794, -42427},{3818, -35147},{3849, -30894},{3886, -29147},{3931, -27923},{3982, -26943},{4041, -26108},{4106, -25371},{4178, -24704},{4258, -24089},{4345, -23516},{4439, -22977},{4541, -22465},{4650, -21976},{4766, -21507},{4890, -21054},{5022, -20616},{5162, -20190},{5310, -19775},{5465, -19369},{5630, -18972},{5802, -18583},{5983, -18200},{6172, -17823},{6370, -17451},{6576, -17084},{6791, -16721},{7015, -16361},{7247, -16005},{7488, -15652},{7737, -15301},{7994, -14953},{8259, -14607},{8532, -14263},{8811, -13921},{9098, -13580},{9391, -13242},{9690, -12906},{9994, -12571},{10304, -12239},{10617, -11909},{10935, -11581},{11257, -11257},{11581, -10935},{11909, -10617},{12239, -10304},{12571, -9994},{12906, -9690},{13242, -9391},{13580, -9098},{13921, -8811},{14263, -8532},{14607, -8259},{14953, -7994},{15301, -7737},{15652, -7488},{16005, -7247},{16361, -7015},{16721, -6791},{17084, -6576},{17451, -6370},{17823, -6172},{18200, -5983},{18583, -5802},{18972, -5630},{19369, -5465},{19775, -5310},{20190, -5162},{20616, -5022},{21054, -4890},{21507, -4766},{21976, -4650},{22465, -4541},{22977, -4439},{23516, -4345},{24089, -4258},{24704, -4178},{25371, -4106},{26108, -4041},{26943, -3982},{27923, -3931},{29147, -3886},{30894, -3849},{35147, -3818},{42427, -3794},{45786, -3777},{49464, -3767},{61393, -3763},{-49464, -3767},{-45786, -3777},{-42427, -3794},{-35147, -3818},{-30894, -3849},{-29147, -3886},{-27923, -3931},{-26943, -3982},{-26108, -4041},{-25371, -4106},{-24704, -4178},{-24089, -4258},{-23516, -4345},{-22977, -4439},{-22465, -4541},{-21976, -4650},{-21507, -4766},{-21054, -4890},{-20616, -5022},{-20190, -5162},{-19775, -5310},{-19369, -5465},{-18972, -5630},{-18583, -5802},{-18200, -5983},{-17823, -6172},{-17451, -6370},{-17084, -6576},{-16721, -6791},{-16361, -7015},{-16005, -7247},{-15652, -7488},{-15301, -7737},{-14953, -7994},{-14607, -8259},{-14263, -8532},{-13921, -8811},{-13580, -9098},{-13242, -9391},{-12906, -9690},{-12571, -9994},{-12239, -10304},{-11909, -10617},{-11581, -10935},{-11257, -11257},{-10935, -11581},{-10617, -11909},{-10304, -12239},{-9994, -12571},{-9690, -12906},{-9391, -13242},{-9098, -13580},{-8811, -13921},{-8532, -14263},{-8259, -14607},{-7994, -14953},{-7737, -15301},{-7488, -15652},{-7247, -16005},{-7015, -16361},{-6791, -16721},{-6576, -17084},{-6370, -17451},{-6172, -17823},{-5983, -18200},{-5802, -18583},{-5630, -18972},{-5465, -19369},{-5310, -19775},{-5162, -20190},{-5022, -20616},{-4890, -21054},{-4766, -21507},{-4650, -21976},{-4541, -22465},{-4439, -22977},{-4345, -23516},{-4258, -24089},{-4178, -24704},{-4106, -25371},{-4041, -26108},{-3982, -26943},{-3931, -27923},{-3886, -29147},{-3849, -30894},{-3818, -35147},{-3794, -42427},{-3777, -45786},{-3767, -49464},{-3763, -61393},{-3767, 49464},{-3777, 45786},{-3794, 42427},{-3818, 35147},{-3849, 30894},{-3886, 29147},{-3931, 27923},{-3982, 26943},{-4041, 26108},{-4106, 25371},{-4178, 24704},{-4258, 24089},{-4345, 23516},{-4439, 22977},{-4541, 22465},{-4650, 21976},{-4766, 21507},{-4890, 21054},{-5022, 20616},{-5162, 20190},{-5310, 19775},{-5465, 19369},{-5630, 18972},{-5802, 18583},{-5983, 18200},{-6172, 17823},{-6370, 17451},{-6576, 17084},{-6791, 16721},{-7015, 16361},{-7247, 16005},{-7488, 15652},{-7737, 15301},{-7994, 14953},{-8259, 14607},{-8532, 14263},{-8811, 13921},{-9098, 13580},{-9391, 13242},{-9690, 12906},{-9994, 12571},{-10304, 12239},{-10617, 11909},{-10935, 11581},{-11257, 11257},{-11581, 10935},{-11909, 10617},{-12239, 10304},{-12571, 9994},{-12906, 9690},{-13242, 9391},{-13580, 9098},{-13921, 8811},{-14263, 8532},{-14607, 8259},{-14953, 7994},{-15301, 7737},{-15652, 7488},{-16005, 7247},{-16361, 7015},{-16721, 6791},{-17084, 6576},{-17451, 6370},{-17823, 6172},{-18200, 5983},{-18583, 5802},{-18972, 5630},{-19369, 5465},{-19775, 5310},{-20190, 5162},{-20616, 5022},{-21054, 4890},{-21507, 4766},{-21976, 4650},{-22465, 4541},{-22977, 4439},{-23516, 4345},{-24089, 4258},{-24704, 4178},{-25371, 4106},{-26108, 4041},{-26943, 3982},{-27923, 3931},{-29147, 3886},{-30894, 3849},{-35147, 3818},{-42427, 3794},{-45786, 3777},{-49464, 3767},};

const int NUM_TLC = 1;
Adafruit_TLC59711 tlc = Adafruit_TLC59711(NUM_TLC, 11, 12);

class Gauge {
public:
    Gauge(uint8_t PH_sin, uint8_t PH_cos, uint8_t EN_sin, uint8_t EN_cos)
      : PH_sin(PH_sin), PH_cos(PH_cos), EN_sin(EN_sin), EN_cos(EN_cos) {
        pinMode(PH_sin, OUTPUT);
        pinMode(PH_cos, OUTPUT);
    }

    void setCoilCurrent(int angle) {
        angle = (360 - angle) % 360;
        int sin = duty_cycle_16bit[angle][0];
        int cos = duty_cycle_16bit[angle][1];
        
        digitalWrite(PH_sin, (sin < 0) ? LOW : HIGH);
        digitalWrite(PH_cos, (cos < 0) ? LOW : HIGH);
        
        tlc.setPWM(EN_sin, abs(sin));
        tlc.setPWM(EN_cos, abs(cos));
        tlc.write();
    }

private:
    uint8_t PH_sin, PH_cos, EN_sin, EN_cos;
};

// Instantiate the gauges
Gauge speedometer   (0, 1, 5, 4);   // Speedometer:     PH_sin, PH_cos, EN_sin, EN_cos
Gauge tachometer    (5, 4, 3, 2);   // Tachometer:      PH_sin, PH_cos, EN_sin, EN_cos
Gauge dynamometer   (3, 2, 1, 0);   // Dynamometer:     PH_sin, PH_cos, EN_sin, EN_cos
Gauge chargeometer  (9, 8, 6, 7);   // Chargeometer:    PH_sin, PH_cos, EN_sin, EN_cos
Gauge thermometer   (7, 6, 8, 9);   // Thermometer:     PH_sin, PH_cos, EN_sin, EN_cos

void setup() {
    pinMode(LED_BUILTIN, OUTPUT);
    pinMode(STBY, OUTPUT);
    Serial.begin(9600);
    Serial2.begin(9600);

    // Initialize TLC59711
    tlc.begin();

    // Initialize channels 0 to 9 to 100% duty cycle (full-on)
    for (uint8_t channel = 0; channel <= 9; channel++) {
        tlc.setPWM(channel, 65535);
    }

    // Initialize channels 10 and 11 to 0 (off)
    tlc.setPWM(10, 65535);
    tlc.setPWM(11, 65535);
    
    tlc.write();
}

void loop() {
    if (Serial2.available()) {
        String inputString = Serial2.readStringUntil('\n');
        inputString.trim();

        if (inputString.startsWith("STBY:")) {
            bool standbyState = inputString.substring(5).toInt();
            digitalWrite(STBY, standbyState ? HIGH : LOW);
        } else {
            String gaugeName = inputString.substring(0, inputString.indexOf(':'));
            int angle = inputString.substring(inputString.indexOf(':') + 1).toInt();

            if (gaugeName == "Speedometer") {
                speedometer.setCoilCurrent(angle);
            } else if (gaugeName == "Tachometer") {
                tachometer.setCoilCurrent(angle);
            } else if (gaugeName == "Dynamometer") {
                dynamometer.setCoilCurrent(angle);
            } else if (gaugeName == "Chargeometer") {
                chargeometer.setCoilCurrent(angle);
            } else if (gaugeName == "Thermometer") {
                thermometer.setCoilCurrent(angle);
            }
        }
    }
}
